<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
                    http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                    http://www.springframework.org/schema/tx
                    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                    http://www.springframework.org/schema/aop
                    http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
                    http://www.springframework.org/schema/context
                    http://www.springframework.org/schema/context/spring-context-3.1.xsd
                    http://www.springframework.org/schema/cache
                    http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
                    http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
       default-lazy-init="true">

<!--    spring扫描指定包和该包下的所有子包-->
    <context:component-scan base-package="com.lovo">
<!--        &lt;!&ndash; 制定扫包规则 ,不扫描@Controller注解的JAVA类 &ndash;&gt;-->
<!--        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
       </context:component-scan>

    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

<!--   获取数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
<!--        数据库连接-->
        <property name="url" value="${jdbc_url}"></property>
<!--        用户名-->
        <property name="username" value="${jdbc_user}"></property>
<!--        密码-->
        <property name="password" value="${jdbc_password}"></property>
<!--        数据jar包-->
        <property name="driverClassName" value="${jdbc_driver}"></property>
    </bean>
    <!--JPA实体管理器工厂-->
    <bean id="factoryBean" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
<!--        数据源-->
        <property name="dataSource" ref="dataSource"/>
<!--        JPA商品适配器(就是实现jpa的框架)-->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
        </property>
<!--        管理实体-->
        <property name="packagesToScan" value="com.lovo.entity"></property>

        <property name="jpaProperties">
            <props>
                <prop key="hibernate.current_session_context_class">thread</prop>
                <!--显示打印hibernate执行的sql语句-->
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <!--是否允许hibernate把对象自动生成表-->
                <!--update 对象属性改变，hibernate会自动去修改表的列，进行同步-->
                <!--create 启动hibernate时，会把数据库的表全部删除，重新再建-->
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
            </props>
        </property>
    </bean>

<!--    适配器-->
    <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
<!--      方言-->
        <property name="databasePlatform" value="${hibernate.dialect}"/>
    </bean>

<!--    事务管理-->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="factoryBean"/>
    </bean>

<!--    把工厂给springdataJpa，并把自定义接口交给soringdataJpa-->
    <jpa:repositories base-package="com.lovo.dao" entity-manager-factory-ref="factoryBean" transaction-manager-ref="transactionManager"></jpa:repositories>


<!--    注解管理-->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"></tx:annotation-driven>

</beans>